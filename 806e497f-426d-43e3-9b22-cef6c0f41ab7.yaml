- defaultTab: nodes
  description: |-
    deploys software and configuration script for TSDN deployment to NSO
    ---
    | system        | access | user   | pass            | description  |
    | ------------- | ------ | ------ | --------------- | ------------ |
    | 198.18.134.61 | HTTPS  | `root` | `C1sco12345!!!` | Virtual ESXi |
  executionEnabled: true
  group: NSO/Configure
  id: 806e497f-426d-43e3-9b22-cef6c0f41ab7
  loglevel: INFO
  multipleExecutions: true
  name: Configure NSO (single node) v5
  nodeFilterEditable: false
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: false
      rankOrder: ascending
      successOnEmptyNodeFilter: false
      threadcount: '1'
    filter: 'tags: "nso"'
  nodesSelectedByDefault: false
  options:
  - description: |-
      [Create POD](00a7b4c3-dc1b-4a1a-b4fd-e1f396281b2f) | [Remove POD](e192c0e9-94be-4e0c-ae4a-578e3d0018f5) | [Show PODs](b0afa385-7f61-4852-a2fb-a2ca0ce8e2f7)
      > /opt/cw/options/cw-environments.json
    enforced: true
    label: CNC POD
    name: controller-vip
    required: true
    valuesUrl: file:/opt/cw/options/cw-environments.json
  - description: |-
      [Add Version](1feb2b38-194d-4427-b9e9-b3c1a031a9b6) | [Show Versions](87932153-4882-4b5e-bc8e-321615baa3d6) | [Remove Version](96b47113-9d8d-4841-8e69-3755d9885e2f)
      > /opt/cw/options/cw-versions.json

      > This will determine the NSO version, based on contents of directory
    enforced: true
    label: Crosswork Version
    name: cw-version
    required: true
    valuesUrl: file:/opt/cw/options/cw-versions.json
  - description: '[Add](4f8a5b3e-bba3-454a-96d2-d7b5fd4118aa)'
    enforced: true
    label: Rundeck node
    name: node
    required: true
    valuesUrl: file:/opt/cw/nodes.json
  - description: '> Execute the script or just build it to be run manually.'
    enforced: true
    label: Execute or Build
    name: execute
    required: true
    value: build
    values:
    - build
    - execute
    valuesListDelimiter: ','
  - enforced: true
    name: package-manager
    required: true
    value: apt
    values:
    - yum
    - apt
    valuesListDelimiter: ','
  - enforced: true
    label: Enable package authentication?
    name: package-authentication
    required: true
    value: 'false'
    values:
    - 'true'
    - 'false'
    valuesListDelimiter: ','
  - label: Crosswork user password
    name: cwpass
    required: true
    value: cisco!123
  - label: Crosswork User Account
    name: cwuser
    required: true
    value: cwuser
  - name: https-port
    value: '8888'
  - name: http-port
    value: '8080'
  - name: netconf-port
    required: true
    value: '2022'
  - enforced: true
    label: Version of Python to install
    name: python-ver
    required: true
    value: 3.8.12
    values:
    - 3.8.12
    valuesListDelimiter: ','
  - delimiter: ','
    label: Which steps to run
    multivalued: true
    name: step
    value: 'updates,python,java,nsocopy,nsofpcopy,nsonedcopy,nsoremove,nsoinstall,xmlupdate,quietyum'
    values:
    - updates
    - python
    - java
    - nsocopy
    - nsofpcopy
    - nsonedcopy
    - nsoremove
    - nsoinstall
    - xmlupdate
    - quietyum
    valuesListDelimiter: ','
  - enforced: true
    hidden: true
    name: buildpath
    required: true
    value: /tmp/software
    values:
    - /tmp/software
    valuesListDelimiter: ','
  plugins:
    ExecutionLifecycle: null
  retry: '0'
  scheduleEnabled: true
  sequence:
    commands:
    - description: Build the deployment script for NSO
      jobref:
        group: NSO/Configure
        importOptions: true
        name: Configure NSO (local)
        uuid: 1dc5c696-63f3-428e-ac83-60f4f3cdcc67
    - description: parse input options
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |
        echo @option.step@ | jq --raw-input --raw-output 'split(",")[] | [.,"true"]|join("=")'
        echo @export.batchfile@
    - description: copy files?
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: "if [ \"@data.nsocopy*@\" == \"true\" ]\nthen\n    echo nsofilepath=/opt/cw/install/nso/@option.cw-version@\n\
        else \n    echo nsofilepath=/dev/null\nfi\n\nif [ \"@data.nsofpcopy*@\" ==\
        \ \"true\" ]\nthen\n    echo nsofpfilepath=/opt/cw/install/nso/@option.cw-version@/fp\n\
        else \n    echo nsofpfilepath=/dev/null\nfi\n\nif [ \"@data.nsonedcopy*@\"\
        \ == \"true\" ]\nthen\n    echo nedfilepath=/opt/cw/install/nso/@option.cw-version@/neds\n\
        else \n    echo nedfilepath=/dev/null\nfi"
    - description: Create install dir with permissions
      script: |-
        mkdir -p @option.buildpath@/fp
        mkdir -p @option.buildpath@/neds
        chmod -R 777 @option.buildpath@/
    - configuration:
        destinationPath: ${option.buildpath}
        echo: 'true'
        pattern: '*.*'
        recursive: 'true'
        sourcePath: ${data.nsofilepath*}
      description: copy NSO
      nodeStep: true
      type: copyfile
    - configuration:
        destinationPath: ${option.buildpath}/fp
        echo: 'true'
        pattern: '*.*'
        recursive: 'true'
        sourcePath: ${data.nsofpfilepath*}
      description: copy fp files
      nodeStep: true
      type: copyfile
    - configuration:
        destinationPath: ${option.buildpath}/neds
        echo: 'true'
        pattern: '*.*'
        recursive: 'true'
        sourcePath: ${data.nedfilepath*}
      description: copy NEDS
      nodeStep: true
      type: copyfile
    - configuration:
        destinationPath: /tmp
        echo: 'true'
        pattern: ${export.batchfile}*
        recursive: 'false'
        sourcePath: /tmp
      description: copy batch file
      nodeStep: true
      type: copyfile
    - description: Run or show contents of file
      script: "if [ \"@option.execute@\" == \"execute\" ]\nthen \n   sh \"/tmp/@export.batchfile@\"\
        \ \nelse\n    cat \"/tmp/@export.batchfile@\"\nfi "
    keepgoing: true
    strategy: sequential
  timeout: 12h
  uuid: 806e497f-426d-43e3-9b22-cef6c0f41ab7

