[ {
  "defaultTab" : "nodes",
  "description" : "",
  "executionEnabled" : true,
  "group" : "-DEMO",
  "id" : "18210490-2ceb-4411-b20d-ef1d07a411d4",
  "loglevel" : "INFO",
  "maxMultipleExecutions" : "1",
  "name" : "file-upload",
  "nodeFilterEditable" : false,
  "notification" : {
    "onfailure" : {
      "email" : {
        "recipients" : "autoamtion@microlab.dcloud.cisco.com",
        "subject" : "${notification.eventStatus} :[${job.name}]: FAILURE: Service Deployment"
      }
    },
    "onsuccess" : {
      "email" : {
        "recipients" : "autoamtion@microlab.dcloud.cisco.com",
        "subject" : "${notification.eventStatus} :[${job.name}]: SUCCESS: Service Deployment"
      }
    }
  },
  "notifyAvgDurationThreshold" : null,
  "options" : [ {
    "enforced" : true,
    "label" : "CNC POD",
    "name" : "cnc-pod",
    "required" : true,
    "valuesUrl" : "file:/opt/cw/options/cw-environments.json"
  }, {
    "description" : "> `commit` - make changes. `dry-run` options - model the changes without committing.`dry-run-reverse` - show the rollback commands to be used *IF* the commit were to take place.\n## Source Template selection in Source Control",
    "enforced" : true,
    "label" : "CNC Commit Options",
    "name" : "dry-run-options",
    "required" : true,
    "valuesUrl" : "file:/opt/cw/options/nso-commit-options.json"
  }, {
    "enforced" : true,
    "name" : "method",
    "required" : true,
    "value" : "PATCH",
    "values" : [ "PATCH", "POST", "PUT", "DELETE" ],
    "valuesListDelimiter" : ","
  }, {
    "name" : "raw",
    "required" : true,
    "type" : "file"
  } ],
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "sequence" : {
    "commands" : [ {
      "description" : "get values",
      "script" : "cat '@file.raw@' | jq -r '(if .[]|type==\"object\" then \"yes\" else \"no\" end) as $x | if $x==\"yes\" then (.[]| leaf_paths as $path | ($path|join(\"|\")|tostring)+\"=\"+(getpath($path)|tostring) ) else (.| leaf_paths as $path | ($path|join(\"|\")|tostring)+\"=\"+(getpath($path)|tostring) ) end'"
    }, {
      "description" : "dry run options",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "captureMultipleKeysValues" : "true",
            "hideOutput" : "false",
            "logData" : "true",
            "regex" : "^(.+?)\\s*=\\s*(.+)"
          },
          "type" : "key-value-data-multilines"
        } ]
      },
      "script" : "if [ \"@option.dry-run-options@\" == \"implementation-plan\" ]\nthen\n    echo DRY_RUN_COMMAND=\"?dry-run=native\"\n    echo RUN_IMPLEMENTATION_PLAN=false\nelif [ \"@option.dry-run-options@\" == \"commit\" ]\n    then\n        echo DRY_RUN_COMMAND=\nelse\n    echo DRY_RUN_COMMAND=\"@option.dry-run-options@\"\n    \nfi"
    }, {
      "description" : "get values",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "captureMultipleKeysValues" : "true",
            "hideOutput" : "false",
            "logData" : "true",
            "regex" : "^(.+?)\\s*=\\s*(.+)"
          },
          "type" : "key-value-data-multilines"
        } ]
      },
      "script" : "#cat '@file.raw@' | jq -r '.params[] |to_entries[] | (\"input-\"+(.key|tostring)+\"=\"+(.value|tostring))'\ncat '@file.raw@' | jq -r '.[][] |to_entries[] | (\"input-\"+(.key|tostring)+\"=\"+(.value|tostring))'\ncat '@file.raw@' | jq -r '.|keys[0] | \"service-model=\"+.|tostring'\ndata=$(cat '@file.raw@' | jq -c '.')\necho service_data=$data\n"
    }, {
      "description" : "cleanse file",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "service_data_clean",
            "regex" : "(.*)",
            "replaceFilteredResult" : "false"
          },
          "type" : "key-value-data"
        } ]
      },
      "script" : "echo '@data.service_data*@' | jq -c 'del(..|objects|select(has(\"directly-modified\")).\"directly-modified\") | del(..|objects|select(has(\"modified\")).\"modified\") | del(..|objects|select(has(\"plan-location\")).\"plan-location\") | del(..|objects|select(has(\"commit-queue\")).\"commit-queue\") | del(..|objects|select(has(\"log\")).\"log\")'"
    }, {
      "description" : "get CNC tokens",
      "jobref" : {
        "group" : "CNC/Configuration",
        "importOptions" : true,
        "name" : "get key vars",
        "uuid" : "c3b0db66-3fdd-49b7-a5b5-4261a0ff3463"
      }
    }, {
      "configuration" : {
        "authentication" : "None",
        "body" : "${data.service_data_clean*}",
        "checkResponseCode" : "false",
        "headers" : "{'Authorization': 'Bearer ${export.cwtoken}','Content-Type': 'application/yang-data+json'}",
        "method" : "PATCH",
        "printResponse" : "true",
        "printResponseToFile" : "false",
        "proxySettings" : "false",
        "remoteUrl" : "https://${export.cwvip}:30603/crosswork/proxy/nso/restconf/data/${data.service-model*}${data.DRY_RUN_COMMAND*}",
        "sslVerify" : "false",
        "timeout" : "300000"
      },
      "description" : "Create or update service",
      "nodeStep" : false,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "datatype" : "application/json",
            "sanitizeHtml" : "true",
            "striped" : "true"
          },
          "type" : "render-datatype"
        } ]
      },
      "type" : "edu.ohio.ais.rundeck.HttpWorkflowStepPlugin"
    } ],
    "keepgoing" : false,
    "strategy" : "sequential"
  },
  "uuid" : "18210490-2ceb-4411-b20d-ef1d07a411d4"
} ]
