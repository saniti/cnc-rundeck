[ {
  "defaultTab" : "nodes",
  "description" : "Notes and links for Demonstration\n---\n# Mig Showcase\n\n> Version 0.3, 03-Mar 2023, Simon Price\n\n# Shortcuts\n[CNC](https://198.18.134.219:30603) | `admin` | `cRo55work!`\n\n[NSO](https://198.18.134.28:8888) | `admin` | `admin`\n\n[HCO](https://198.18.134.25/) | `admin` | `C1sco12345`\n\n[CML](https://198.18.134.1) | `mig-admin` | `C1sco12345`\n\n[GIT](http://198.18.133.102:3000) | `simon` | `cisco.123`\n\n[Kafka](http://198.18.133.102:8080) | `none`\n\n[Netbox](ttp://198.18.133.102:8000) | `admin` | `admin`\n\n[[@toc]]\n\n# Access\n***VPN***\n[_top](#mig-showcase)\n> Access to the demonstration environment is by anyconnect VPN service as follows. \n\n| site                            | user       | pass   |\n| ------------------------------- | ---------- | ------ |\n| dcloud-syd-anyconnect.cisco.com | v1965user1 | 145e7b |\n\nOnce connected, all IP endpoints are available directly via IP / DNS names, or the user can connect to the remote desktop session by this  **[:link:](https://dcloud2-syd.cisco.com/sessions/312794/servers/4133567/rdp?returnPathTitleKey=view-session)**\n\n# Automations\n[_top](#mig-showcase)\n> The following outlines (some) of the existing automation and use case capability\n\n## CNC (Crosswork Network Controller)\n### Essentials\n#### Logon - `198.18.133.101:4440` as `admin` `admin`\n1. Navigate to CNC Project\n2. Click to expand `Auth` group\n1. Run Job `CNC - Auth`\n\t> This will generate and store a CNC authentication token on-disk, which will be used with other automation services\n\n### Show Devices\n1. `CNC` > `Devices` > `CNC - Get Device details (all)`\n\t> POD `dcloud-orig`\n\t> 1. When complete, expand and look for `show props` task output. List of PODS, names, VIP / IPs will be listed.\n\n### Show CNC PODs\n1. `CNC` > `POD` > `Show All PODs`\n\t> \n\t> 1. When complete, expand and look for `show abbreviated` task output. Device list will be rendered in HTML table\n\n### show CML\n1. `CNC` > `POD` > `Show All PODs`\n\t> \n\t> 1. When complete, expand and look for `show abbreviated` task output. Device list will be rendered in HTML table\n\n# Infrastructure\n\n## Networks\n[_top](#mig-showcase)\n> There are 3 primary networks used within the environment, with full routing between each (no restrictions or firewalls). \n\n***vlan-primary***\n>  198.18.128.0/18\n\n| range                         | mask          | gateway      | dns          |\n| ----------------------------- | ------------- | ------------ | ------------ |\n| 198.18.128.1 - 198.18.191.255 | 255.255.192.0 | 198.18.128.1 | 198.18.128.1 |\n\n\n***southbound l1***\n> 198.18.2.0/24\n\n| range                   | mask          | gateway    | dns |\n| ----------------------- | ------------- | ---------- | --- |\n| 198.18.2.1-198.18.2.254 | 255.255.255.0 | 198.18.2.1 |  198.18.128.1   |\n\n***southbound l2***\n> 198.18.x.x.\n\n| range                   | mask          | gateway    | dns          |\n| ----------------------- | ------------- | ---------- | ------------ |\n| 198.18.2.1-198.18.2.254 | 255.255.255.0 | 198.18.2.1 | 198.18.128.1 |\n\n### Shared Services\n**ntp**: 198.18.128.1\n\n## VMware vCenter\n[_top](#mig-showcase)\n> There is a dedicated VMware vSphere environment for this lab, which consists of 5 virtual ESX hosts that sit within the dCloud environment, and one that sits within this lab. \n- Anything running on the esx01i - esx05i is considered volatile, and can / will be refreshed by dCloud as appropriate\n- Anything running on esx06i is considered persistent and will not be impacted by the dCloud reset functions. **This is where local environment and contents will live**\n\n| host                                                           | user                      | pass         |\n| -------------------------------------------------------------- | ------------------------- | ------------ |\n| https://198.18.134.67/ui<br>https://vc67.demo.dcloud.cisco.com | `mig-admin@vsphere.local` | `C1sco12345` |\n\n### Devices\n[_top](#mig-showcase)\n:white_check_mark: Devices are virtual devices in a dedicated, local CML instance\n:white_check_mark: New topologies can be created as required\n:white_check_mark: Automation exists to remap CNC solution to new topology\n\n> The following devices / topology is available within the environment, all hosted with CML. The same should be available within Crosswork Network Controller UI\n\n[_Created in code with Mermaid, rendered in HTML_]\n\n```mermaid\nflowchart LR\n\n\nnode-1[\"node 1<br>198.19.1.1<br>IOS XR<br>7.7.1.21\"]\nnode-2[\"node 2<br>198.19.1.2<br>IOS XR<br>7.7.1.21\"]\nnode-3[\"node 3<br>198.19.1.3<br>IOS XR<br>7.7.1.21\"]\nnode-4[\"node 4<br>198.19.1.4<br>IOS XR<br>7.7.1.21\"]\n\nnode-7[\"node 7<br>198.19.1.7<br>IOS XR<br>7.7.1.21\"]\nnode-8[\"node 8<br>198.19.1.8<br>IOS XR<br>7.7.1.21\"]\nnode-5[\"node 5<br>198.19.1.5<br>IOS XR<br>7.7.1.21\"]\nswitch0[\"switch 0\"]\ntrafficgen[\"Traffic</br>Generator\"]\ntgen1[\"Traffic</br>Generator Lan 1\"]\ntgen2[\"Traffic</br>Generator Lan 2\"]\ncpe1((CPE 1))\ncpe2((CPE 2))\n\nnode-1 x--x|<- GigabitEthernet0/0/0/6<br>GigabitEthernet2 ->|node-2\nnode-1 x--x|<- GigabitEthernet0/0/0/0<br/>GigabitEthernet0/0/0/0 ->|node-5\nnode-1 x--x|<- GigabitEthernet0/0/0/2<br/>GigabitEthernet0/0/0/2 ->|node-7\nnode-1 x--x|<- GigabitEthernet0/0/0/3<br/>GigabitEthernet0/0/0/2 ->|node-8\nnode-1 x--x|<- GigabitEthernet0/0/0/4<br/>GigabitEthernet0/0/0/0 ->|node-3\nnode-1 x--x|<- MgmtEth0/RP0/CPU0/0<br/>port2 ->|switch0\nnode-1 x--x|<- GigabitEthernet0/0/0/1<br/>port2 ->|tgen1\n\nnode-2 x--x|<- GigabitEthernet5<br>port1 ->|tgen2\nnode-2 x--x|<- GigabitEthernet3<br>GigabitEthernet0/0/0/2 ->|node-3\nnode-2 x--x|<- GigabitEthernet4<br>GigabitEthernet0/0/0/4 ->|node-4\nnode-2 x--x|<- GigabitEthernet1<br>port6 ->|switch0\n\nnode-3 x--x|<- GigabitEthernet0/0/0/3<br>GigabitEthernet0/0/0/2 ->|node-4\nnode-3 x--x|<- GigabitEthernet0/0/0/4<br>port3 ->|tgen2\nnode-3 x--x|<- GigabitEthernet0/0/0/5<br>GigabitEthernet0/0/0/4 ->|node-7\nnode-3 x--x|<- MgmtEth0/RP0/CPU0/0<br>port8 ->|switch0\n\nnode-4 ---|<- GigabitEthernet0/0/0/0<br>GigabitEthernet0/0/0/1 ->|node-7\nnode-4 ---|<- GigabitEthernet0/0/0/3<br>port3 ->|tgen2\nnode-4 ---|<- MgmtEth0/RP0/CPU0/0<br>port7 ->|switch0\nnode-4 ---|<- GigabitEthernet0/0/0/1<br>GigabitEthernet0/1 ->|cpe2\n\nnode-5 x--x|<- GigabitEthernet0/0/0/2<br>GigabitEthernet0/0/0/0 ->|node-8\nnode-5 x--x|<- GigabitEthernet0/0/0/3<br>port1 ->|tgen1\nnode-5 x--x|<- MgmtEth0/RP0/CPU0/0<br>port1 ->|switch0\nnode-5 x--x|<- GigabitEthernet0/0/0/1<br>GigabitEthernet0/1 ->|cpe1\n\nnode-7 x--x|<- GigabitEthernet0/0/0/3<br>GigabitEthernet0/0/0/3 ->|node-8\nnode-7 x--x|<- GigabitEthernet0/0/0/5<br>port3 ->|tgen1\nnode-7 x--x|<- MgmtEth0/RP0/CPU0/0<br>port9 ->|switch0\n\nnode-8 x--x|<- GigabitEthernet0/0/0/3<br>GigabitEthernet0/0/0/3 ->|node-8\nnode-8 x--x|<- GigabitEthernet0/0/0/4<br>port4 ->|tgen1\nnode-8 x--x|<- MgmtEth0/RP0/CPU0/0<br>port5 ->|switch0\n\ntrafficgen x--x|<- ens3<br>port4->|switch0\ntrafficgen x--x|<- ens4<br>port6->|tgen1\n```\n# Jump Hosts\n\n## Desktop\n[_top](#mig-showcase)\n> This is the main dCloud Windows desktop that contains links to all systems, use cases, postman data.\n\nversion: `windows10`\n| system                                                                                                           | access    | user          | pass       | description |\n| ---------------------------------------------------------------------------------------------------------------- | --------- | ------------- | ---------- | ----------- |\n| [Link :link:](https://dcloud2-syd.cisco.com/sessions/313082/servers/4137927/rdp?returnPathTitleKey=view-session) | Guacamole | n/a           | n/a        | n/a         |\n| rdp://198.18.133.152                                                                                             | RDP       | Administrator | C1sco12345 | n/a         |\n\n\n\n## JH01\n[_top](#mig-showcase)\nversion: `centos7`\n| system               | access | user | pass      | description |\n| -------------------- | ------ | ---- | --------- | ----------- |\n| rdp://198.18.133.133 | RDP    | root | cisco.123 | jumphost 01 |\n\n\n## JH02\n[_top](#mig-showcase)\nversion: `centos7`\n| system               | access | user | pass      | description |\n| -------------------- | ------ | ---- | --------- | ----------- |\n| rdp://198.18.133.134 | RDP    | root | cisco.123 | jumphost 02 |\n\n\n# Software\n\n## dCloud hosted (variable)\n\n### CNC - Crosswork Network Controller\n[_top](#mig-showcase)\n> CNC is the IP domain manager tool, that manages segement routing and Traffic Engineering, analytics, and change automation features using the PCE and NSO network configuration elements. \n\nversion: `4.0 eft 3`\n| system                                                                        | access | user  | pass       | description |\n| ----------------------------------------------------------------------------- | ------ | ----- | ---------- | ----------- |\n| https://crosswork.demo.dcloud.cisco.com:30603<br>https://198.18.134.219:30603 | HTTPS  | admin | cRo55work! |             |\n\n\n### NSO - Crosswork Network Automation\n[_top](#mig-showcase)\nversion: `xxx`, hosted `dcloud`\n| system                                | access | user  | pass  | description |\n| ------------------------------------- | ------ | ----- | ----- | ----------- |\n| https://198.18.134.28:8888            | HTTPS  | admin | admin |             |\n| http://nso.demo.dcloud.cisco.com:8080 | HTTP   | admin | admin |             |\n\n#### External Integration with Kafka\n![](@attachment/Clipboard_2023-02-17-11-12-38.png)\n\n### CDG - Crosswork Data Gateway\n[_top](#mig-showcase)\n\n### WAE - Crosswork WAN Automation Engine\n[_top](#mig-showcase)\n\n### HCO - Crosswork Hierachical Controller\n[_top](#mig-showcase)\n***UI - dCloud***\n> https://198.18.134.25/\n\n***Credentials***\n> admin\n> C1sco12345\n\nhttps://198.18.134.1/\n\n### EPN-M - Crosswork Enhanced Programmable Network Manager\n[_top](#mig-showcase)\n> dCloud hosted version of EPNM, currently running 6.0 but moving to 6.1\n:white_check_mark: Element Management System for Cisco devices\n\n\nversion: `6.0.0.0`, hosting `dcloudl`\n| system               | access | user    | pass         | description |\n| -------------------- | ------ | ------- | ------------ | ----------- |\n| https://198.18.134.7 | HTTPS  | `root`  | `Public123#` |             |\n| ssh://198.18.134.7   | SSH    | `admin` | `Public123#` |             |\n\n## Localised (persistent)\n### CML - Cisco Modelling Labs\n[_top](#mig-showcase)\n> This is a dedicated instance, running on physical compute (bare metal).\n:white_check_mark: Presents virtual devices with real configuration\n:white_check_mark: Easy export / save of entire stack\n:white_check_mark: Create multiple labs which can be connected together\n\nversion: `4.0`, hosting `bare-metal` current cnc lab `cnc4_v15h_2cpe.yaml`\n| system                  | access | user        | pass         | description |\n| ----------------------- | ------ | ----------- | ------------ | ----------- |\n| https://198.18.134.1    | HTTPS  | `mig-admin` | `C1sco12345` |             |\n| ssh://198.18.134.1:1122 | SSH    | `sysadmin`  | `C1sco12345` |             |\n\n### KVM - Hosting\n[_top](#mig-showcase)\n> KVM is a linux open source hypervisor (like VMware ESX). This is running on bare-metal UCS host and currently hosting the VMware ESXi local instance.\n:white_check_mark: Presents virtual devices with real configuration\n\nversion: `x`, hosting `bare-metal`\n| system              | access | user   | pass         | description |\n| ------------------- | ------ | ------ | ------------ | ----------- |\n| ssh://198.18.134.39 | SSH    | `root` | `C1sco12345` |             |\n\n\n### ESXi - Virtualisation Platform\n[_top](#mig-showcase)\n> This is a dedicated instance that is unaffected by a reset of the dCloud environment. Currently this is a virtual/nested ESXi instance running under KVM, on bare-metal in the showcase lab.\n:white_check_mark: Joined to the dCloud cluster\n:white_check_mark: Running **all** internal VMs and docker instances listed below\n:white_check_mark: Same networks present as dCloud ESXi / vCenter\n\nversion: `6.7`, hosting `kvm`\n| system        | access | user   | pass          | description  |\n| ------------- | ------ | ------ | ------------- | ------------ |\n| 198.18.134.61 | HTTPS  | `root` | `C1sco12345!` | Virtual ESXi |\n> Note that the IP needs to change for blueberry release, since BB contains 6 ESX hosts rather than 5\n\n### Rundeck - Use Case Automation\n[_top](#mig-showcase)\n> _Rundeck_ is really the heart and key differentiator for the mig showcase. It is a simple, free and open source MOP Automation tools that performs flat/basic operations such as setting up the environment and ultimately, managing the use cases setup / tear down\n:white_check_mark: Setup and define CNC PODs\n:white_check_mark: Deploy CNC and CDG infrastructure\n:white_check_mark: Interface all systems by API, including Sedona, CNC, NSO, Netbox, CML\n:white_check_mark: Backup / restore services stored in git\n:white_check_mark: Collate inventory / send email\n:white_check_mark: Configure policies and connectivity\n:white_check_mark: Setup environment for different geo\n:white_check_mark: Execute test and verification scripts\n:white_check_mark: Manage use cases and environment / configuration reset\n\nversion: `4.1`, hosting `installed` service_inputs `/opt/cw/options` image_files `/opt/cw/images` update_files `/opt/cw/install`\n| system  | Address                    | access | user    | pass        | description |\n| ------- | -------------------------- | ------ | ------- | ----------- | ----------- |\n| Rundeck | http://198.18.133.101:4440 | HTTP   | `admin` | `admin`     |             |\n| Shell   | ssh://198.18.133.101       | SSH    | `cisco` | `cisco.123` |             |\n| Desktop | ssh://198.18.133.231:3389  | RDP    | `cisco` | `cisco`     |             |\n\n### NSO - All in one\n[_top](#mig-showcase)\n> This is a stand-alone NSO instance running on ubuntu, which additional runs another copy of _rundeck_.  \n\n:white_check_mark: Detailed NSO configuration\n:white_check_mark: Ansible setup and configuration of NSO\n\nnso version: `6.0`, hosting `install` rundeck version `4.1` tools `make` `ant` `java` `python3` `ansible` `jq` `yq`\n| system  | Address                    | access | user    | pass    | description |\n| ------- | -------------------------- | ------ | ------- | ------- | ----------- |\n| Rundeck | http://198.18.133.213:4440 | HTTP   | `admin` | `admin` |             |\n| Shell   | ssh://198.18.133.213       | SSH    | `cisco` | `cisco` |             |\n| Desktop | ssh://198.18.133.213:3389  | RDP    | `cisco` | `cisco` |             |\n\n### Maildev (local mail server)\n[_top](#mig-showcase)\n> Maildev is a small docker application that runs a web based mail server, and also acts as an internal mail endpoint (SNMP). Generally, data is not persisted during restarts. \n:white_check_mark: Presents a user interfaces to display and manage both text based and rich formatted emails\n:white_check_mark: Allows export of email in outlook format for storage\n:white_check_mark: Serves an SNMP endpoint to allow systems to send emails directly, without a publicly routable SNMP or mail relay server\n\nversion: `1.2`, hosting `docker`\n| system                     | access | user | pass | description                                                 |\n| -------------------------- | ------ | ---- | ---- | ----------------------------------------------------------- |\n| http://198.18.133.102:1080 | HTTP   | none | none |                                                             |\n| smtp://198.18.133.102:1025 | SNMP   | none | none | Mail servers should be configured to send mail on port 1025 |\n\n### MockServer (Mock HTTP endpoints)\n[_top](#mig-showcase)\n> MockServer is a powerful tool that enables a simulated response to API requests. \n:white_check_mark: Simulates the notification endpoint for CNC\n\nversion: `4.0`, hosting `docker`\n| system                                          | access | user | pass | description                                                                                                                                        |\n| ----------------------------------------------- | ------ | ---- | ---- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n| http://198.18.133.102:9000/mockserver/dashboard | HTTP   | none | none | The dashboard will show any incoming http / rest requests, their responses and matches. <br> For more info see **[:link:](http://mockserver.com)** |\n\n### Netbox (IPAM)\n[_top](#mig-showcase)\n> Netbox is a free open source (and very good) IP Address Management (IPAM) tool. It is configured to host all of the internal networks / ranges / prefixes, and performs the following functions\n:white_check_mark: Retrieve next available IP addresses based on `tag`\n:white_check_mark: Model Virtual Machines and Systems\n:white_check_mark: Model interfaces and IP addresses\n:white_check_mark: Model and generate VPN route targets, route distinguishers\n:white_check_mark: Present an API to enable rundeck to consume the above resources\n\nversion: `4.0`, hosting `docker`\n| system                     | access | user    | pass    | description      |\n| -------------------------- | ------ | ------- | ------- | ---------------- |\n| http://198.18.133.102:8000 | HTTP   | `admin` | `admin` | :speech_balloon: |\n\n### Gitea (git)\n[_top](#mig-showcase)\n> Gitea is a local implementation of _git_, and serves to store configuration in order to demonstrate key capabilities of _intent based networking_.\n:white_check_mark: Version control of rundeck jobs\n:white_check_mark: Version control of L2/L3 VPN data\n:white_check_mark: Trigger deployments based on merges (future) using *gitflow* processes\n:white_check_mark: Compare configurations\n\nversion: `4.0`, hosting `docker`\n| system                     | access | user    | pass        | description      |\n| -------------------------- | ------ | ------- | ----------- | ---------------- |\n| http://198.18.133.102:3000 | HTTP   | `simon` | `cisco.123` | :speech_balloon: |\n\n### Kafka (message bus) \n[_top](#mig-showcase)\n> Kafka is a distributed and resilient message bus used extensively throughout modern infrastructure. \n:white_check_mark: Output data from CNC to Kafka endpoint\n\nversion: `4.0`, hosting `docker`\n| system                     | access | user | pass | description |\n| -------------------------- | ------ | ---- | ---- | ----------- |\n| http://198.18.133.102:8080 | HTTP   | n/a  | n/a  | Kafka UI    |\n\n\n### Taiga (Jira like project board) \n[_top](#mig-showcase)\n> Taiga is a agile board - similar to Jira. It is used to demonstrate (Potential) integrations between kafka, orchestration systems\n> #### Use cases\n:white_check_mark: Release Management -  Create customer project board with set of tasks. Integrations with `NSO`, `kafka` and `rundeck` via webhooks and kafka consumers. Dynamic updates to requested tasks. \n\nversion: `4.0`, hosting `docker`\n| Solution | system                     | access | user  | pass      | description |\n| -------- | -------------------------- | ------ | ----- | --------- | ----------- |\n| Taiga UI | http://198.18.133.102:9001 | HTTP   | admin | cisco.123 |             |\n\n### Syslog\n[_top](#mig-showcase)\n> Syslog is a protocol used to s \n:white_check_mark: Output data from CNC to Kafka endpoint\n\nversion: `4.0`, hosting `docker`\n| system                     | access | user    | pass    | description      |\n| -------------------------- | ------ | ------- | ------- | ---------------- |\n| http://198.18.133.102:3000 | HTTP   | `admin` | `admin` | :speech_balloon: |",
  "executionEnabled" : true,
  "group" : "-DEMO",
  "id" : "8e635fb1-f3ea-4945-be24-934694ef9da3",
  "loglevel" : "INFO",
  "name" : ".readme.first",
  "nodeFilterEditable" : false,
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "sequence" : {
    "commands" : [ {
      "exec" : "echo $RD_JOB_EXECID"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "uuid" : "8e635fb1-f3ea-4945-be24-934694ef9da3"
} ]
