[ {
  "defaultTab" : "nodes",
  "description" : "",
  "executionEnabled" : true,
  "group" : "CNC/Configuration",
  "id" : "3b8ffcd1-78bb-44a3-a69f-66f6ab56d5fb",
  "loglevel" : "INFO",
  "name" : "CNC - Create Policies",
  "nodeFilterEditable" : false,
  "options" : [ {
    "enforced" : true,
    "name" : "cnc-vip",
    "required" : true,
    "valuesUrl" : "file:/opt/cw/options/cw-environments.json"
  } ],
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "sequence" : {
    "commands" : [ {
      "description" : "vars",
      "jobref" : {
        "args" : "-cnc-pod ${option.cnc-vip}",
        "group" : "CNC/Configuration",
        "name" : "get key vars",
        "uuid" : "c3b0db66-3fdd-49b7-a5b5-4261a0ff3463"
      }
    }, {
      "configuration" : {
        "authentication" : "None",
        "body" : "{\n  \"odn-template\": {\n    \"name\": \"SR-ODN-300\",\n    \"head-end\": [\n      {\n        \"name\": \"PE1\"\n      },\n      {\n        \"name\": \"PE2\"\n      }\n    ],\n    \"maximum-sid-depth\": 6,\n    \"color\": 300,\n    \"bandwidth\": 200,\n    \"dynamic\": {\n      \"metric-type\": \"hopcount\",\n      \"metric-margin\": {\n        \"absolute\": 30\n      },\n      \"disjoint-path\": {\n        \"type\": \"link\",\n        \"group-id\": 10,\n        \"sub-id\": 5\n      },\n      \"affinity\": {\n        \"rule\": {\n          \"action\": \"include-all\",\n          \"color\": [\n            \"GREEN\",\n            \"RED\"\n          ]\n        }\n      }\n    }\n  }\n}",
        "checkResponseCode" : "false",
        "headers" : "{\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer ${export.cwtoken*}\"}",
        "method" : "PUT",
        "printResponse" : "true",
        "printResponseToFile" : "false",
        "proxySettings" : "false",
        "remoteUrl" : "https://${export.mgtvip}:30603/crosswork/proxy/nso/restconf/data/cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn?async-commit-queue=true",
        "responseCode" : "200",
        "sslVerify" : "false",
        "timeout" : "30000"
      },
      "description" : "add policy",
      "nodeStep" : false,
      "type" : "edu.ohio.ais.rundeck.HttpWorkflowStepPlugin"
    }, {
      "configuration" : {
        "fail" : "true",
        "halt" : "true",
        "status" : "fail now"
      },
      "description" : "fail",
      "nodeStep" : false,
      "type" : "flow-control"
    }, {
      "configuration" : {
        "command" : "cat /opt/cw/tmp/${option.cnc-vip}.cwvip"
      },
      "description" : "get vip",
      "nodeStep" : true,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "vip",
            "regex" : "(.*)"
          },
          "type" : "key-value-data"
        } ]
      },
      "type" : "localexec"
    }, {
      "configuration" : {
        "command" : "cat /opt/cw/tmp/${option.cnc-vip}.cwtoken"
      },
      "description" : "get token",
      "nodeStep" : true,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "token",
            "regex" : "(.*)"
          },
          "type" : "key-value-data"
        } ]
      },
      "type" : "localexec"
    }, {
      "configuration" : {
        "command" : "jq '.[] | select(.name==\"${option.location-data}\").\"Longitude\"' /opt/cw/options/locations.json"
      },
      "description" : "get long",
      "nodeStep" : true,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "longitude",
            "regex" : "(.*)"
          },
          "type" : "key-value-data"
        } ]
      },
      "type" : "localexec"
    }, {
      "configuration" : {
        "command" : "jq '.[] | select(.name==\"${option.location-data}\").\"Latitude\"' /opt/cw/options/locations.json"
      },
      "description" : "get lat",
      "nodeStep" : true,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "latitude",
            "regex" : "(.*)"
          },
          "type" : "key-value-data"
        } ]
      },
      "type" : "localexec"
    }, {
      "configuration" : {
        "command" : "jq '.[] | select(.name==\"${option.location-data}\").\"Country\"' /opt/cw/options/locations.json"
      },
      "description" : "get country",
      "nodeStep" : true,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "country",
            "regex" : ".([A-Z,a-z]+).+"
          },
          "type" : "key-value-data"
        } ]
      },
      "type" : "localexec"
    }, {
      "description" : "reconfigure JSON object",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "payload",
            "regex" : "(.*)"
          },
          "type" : "key-value-data"
        } ]
      },
      "script" : "file=/tmp/@job.execid@.json\ntmpfile=/tmp/@job.execid@.json.tmp\n\necho '@option.provider-schema@' > $file\njq '( .data[].geo_info.coordinates.longitude.value)|=\"@data.longitude*@\"' $file > $tmpfile\njq '( .data[].geo_info.coordinates.latitude.value)|=\"@data.latitude*@\"' $tmpfile > $file\njq '( .data[].geo_info.country)|=\"@data.country*@\"' $file > $tmpfile\njq '(..|objects|select(has(\"inet_addr\"))).\"inet_addr\"|= \"@option.device-ip@\"' $tmpfile > $file\njq '(..|objects|select(has(\"host_name\"))).\"host_name\"|= \"@option.device-name@\"' $file > $tmpfile\njq '(..|objects|select(has(\"mask\"))).\"mask\"|= \"@option.device-mask@\"' $tmpfile > $file\njq '(..|objects|select(has(\"provider_node_id\"))).\"provider_node_id\"|= \"@option.device-name@cpocsyd.local\"' $file > $tmpfile\njq '(..|objects|select(has(\"te_router_id\"))).\"te_router_id\"|= \"@option.te_router_id@\"' $tmpfile > $file\njq '(..|objects|select(has(\"telemetry_intf_src_vrf\"))).\"telemetry_intf_src_vrf\"|= \"@option.telemetry_intf_src_vrf@\"' $file > $tmpfile\njq '(..|objects|select(has(\"telemetry_intf_src_name\"))).\"telemetry_intf_src_name\"|= \"@option.telemetry_intf_src_name@\"' $tmpfile > $file\njq '( .data[].connectivity_info[]|select(.type==\"ROBOT_MSVC_TRANS_SNMP\") ).port|=\"@option.device-snmp-port@\"' $file > $tmpfile\njq '( .data[].connectivity_info[]|select(.type==\"ROBOT_MSVC_TRANS_SSH\") ).port|=\"@option.device-ssh-port@\"' $tmpfile > $file\njq '.data[].uuid|=\"@export.device-uuid@\"' $file > $tmpfile\njq -c . $tmpfile"
    }, {
      "configuration" : {
        "debugOnly" : "false"
      },
      "nodeStep" : false,
      "type" : "log-data-step"
    }, {
      "configuration" : {
        "data" : "{\"dgDeviceMappings\":[{\"cdg_duuid\":\"${option.cdg}\",\"device_uuid\":[\"${export.device-uuid}\"],\"mapping_oper\":\"ADD_OPER\"}]}",
        "format" : "json"
      },
      "description" : "create payload",
      "nodeStep" : false,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "invalidKeyPattern" : "\\s|\\$|\\{|\\}|\\\\",
            "logData" : "true",
            "name" : "payload",
            "regex" : "(.*)"
          },
          "type" : "key-value-data"
        } ]
      },
      "type" : "stub-data-step"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "uuid" : "3b8ffcd1-78bb-44a3-a69f-66f6ab56d5fb"
} ]
