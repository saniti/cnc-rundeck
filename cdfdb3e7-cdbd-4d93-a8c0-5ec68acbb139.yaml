- defaultTab: nodes
  description: Onboard entries into a Kafka topic
  executionEnabled: true
  group: Kafka/99 - Callbacks
  id: cdfdb3e7-cdbd-4d93-a8c0-5ec68acbb139
  loglevel: INFO
  name: Kafka enque
  nodeFilterEditable: false
  options:
  - hidden: true
    name: kafka-host
    required: true
    secure: true
    storagePath: keys/kafka/kafka-host
    valueExposed: true
  - description: '> Create new customer: [Add new Customer](/job/show/69d6030f-0829-48ce-8101-772f2c0a54cc)'
    label: Customer Name
    name: customer
    required: true
    sortValues: true
    valuesUrl: file:/opt/cw/options/customers.json
  - label: Input string for message
    name: input
    required: true
  - description: '> Typically this should be the action / method taken'
    label: Kafka Key
    name: key
    required: true
  - name: x
    value: '{"partion":"0","key":"approvals-in","content":"{\"service\": {\"name\":
      \"test3\", \"type\": \"l3vpn\"}, \"device\": \"xr1 \", \"config\": \"router
      bgp 65001\\n bgp log neighbor changes detail\\n address-family ipv4 unicast\\n
      exit\\n neighbor 10.10.10.10\\n  remote-as 100\\n exit\\nexit\\n\", \"message\":
      \"Please Review request\"}"}'
  - label: Release date
    name: release
    required: true
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: xxx
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: output
            regex: (.*)
          type: key-value-data
      script: "#jq -c '.[] | select(.name==\"@option.key@\")' /opt/cw/options/customers.json\n\
        echo '@option.input@' | jq -c "
    - description: converge payload
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: converged
            regex: (.*)
          type: key-value-data
      script: |-
        #echo '{"@option.key@":@data.output*@}' | jq -c

        echo '{"params":[{"release":"@option.release@","service-type":"@option.key@"}],"data":@data.output*@}' | jq -c
    - description: escape payload
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: escaped
            regex: (.*)
          type: key-value-data
      script: echo '@data.converged*@' | jq -Rc
    - description: build final
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: payload
            regex: (.*)
          type: key-value-data
      script: 'echo ''{"partition":"0","key":"@option.key@","content":@data.escaped*@,"keySerde":
        "String","valueSerde": "String"}'''
    - description: create topic if it doesn't exist
      errorhandler:
        configuration:
          fail: 'false'
          halt: 'false'
          status: topic already exists
        keepgoingOnSuccess: true
        nodeStep: false
        type: flow-control
      jobref:
        args: -key ${option.customer}
        group: Kafka/helpers
        name: Kafka - create topic
        uuid: f628912a-99ee-43bc-9cae-6233abdd76f7
    - configuration:
        authentication: None
        body: ${data.payload*}
        checkResponseCode: 'false'
        headers: '{"Content-Type": "application/json"}'
        method: POST
        printResponse: 'true'
        printResponseToFile: 'false'
        proxySettings: 'false'
        remoteUrl: ${option.kafka-host}/clusters/local/topics/${option.customer}/messages
        sslVerify: 'false'
        timeout: '30000'
      nodeStep: false
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: parse inputs
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: echo '@option.x@' | jq -r '. |to_entries[] | .key+"="+(.value|tostring)'
    - description: view result
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'false'
          type: render-datatype
      script: 'echo ''@data.content*@'' | jq '
    keepgoing: false
    strategy: node-first
  uuid: cdfdb3e7-cdbd-4d93-a8c0-5ec68acbb139

