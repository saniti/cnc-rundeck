- defaultTab: nodes
  description: |+
    Deploys stored template services and policies from git. VPN services will be prefixed with the customer name

  executionEnabled: true
  group: -DEMO/Slicing
  id: efdd754c-613d-4251-b0a3-88d888fbdad8
  loglevel: INFO
  name: '1.4 - Device Class Maps '
  nodeFilterEditable: false
  notification:
    onsuccess:
      email:
        recipients: autoamtion@microlab.dcloud.cisco.com
        subject: '${notification.eventStatus} :[${job.name}]: New VPN Definition :
          ${option.customer}-${option.vpn-name}.json'
  notifyAvgDurationThreshold: null
  options:
  - hidden: true
    name: git
    required: true
    secure: true
    storagePath: keys/git/repo
    valueExposed: true
  - hidden: true
    name: token
    required: true
    secure: true
    storagePath: keys/gitea/token
    valueExposed: true
  - description: '> [Authenticate](96e872a2-5704-4af6-96dc-47758e6049d9)'
    enforced: true
    label: CNC POD
    name: cnc-pod
    required: true
    valuesUrl: file:/opt/cw/options/cw-environments.json
  - description: |-
      > [Add](8e3b0a1a-421c-4d0d-bb2c-c7d0af07116c)|[Remove](eec83222-22a5-46b9-9712-0b869442c27d)
      ## CW/NSO Commit Options
    enforced: true
    label: Customer
    name: customer
    required: true
    valuesUrl: file:/opt/cw/options/customers.json
  - description: '## git options'
    enforced: true
    label: Commit Options
    name: dry-run-options
    required: true
    valuesUrl: file:/opt/cw/options/nso-commit-options.json
  - enforced: true
    label: Sync
    name: sync-option
    required: true
    value: 'true'
    values:
    - 'true'
    - 'false'
    valuesListDelimiter: ','
  - enforced: true
    label: git owner
    name: git-owners
    required: true
    value: dcloud
    valuesUrl: http://${option.proxy.value}/git/owners
  - enforced: true
    label: git repository
    name: git-repos
    required: true
    value: slice-data
    valuesUrl: http://${option.proxy.value}/git/myrepos/${option.git-owners.value}
  - enforced: true
    label: GIT Branch
    name: git-branch
    required: true
    valuesUrl: http://${option.proxy.value}/git/branches/${option.git-owners.value}/${option.git-repos.value}
  - enforced: true
    label: Repo directories
    name: git-dirs
    required: true
    value: slice-demo
    valuesUrl: http://${option.proxy.value}/git/content/dir/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}
  - enforced: true
    label: class map file
    name: class-map
    required: true
    sortValues: true
    valuesUrl: http://${option.proxy.value}/git/files/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}/${option.git-dirs.value}
  - enforced: true
    label: policy map file
    name: policy-map
    required: true
    sortValues: true
    valuesUrl: http://${option.proxy.value}/git/files/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}/${option.git-dirs.value}
  - hidden: true
    name: now
    required: true
    value: ${DATE:yyyy-MM-dd-HH-mm-ss}
  - enforced: true
    label: Node 1
    name: device-1
    required: true
    value: Node-3
    valuesUrl: http://${option.proxy.value}/devices
  - enforced: true
    label: Node 2
    name: device-2
    required: true
    value: Node-4
    valuesUrl: http://${option.proxy.value}/devices
  - enforced: true
    label: Node 3
    name: device-3
    required: true
    value: Node-5
    valuesUrl: http://${option.proxy.value}/devices
  - enforced: true
    label: Node 4
    name: device-4
    required: true
    value: Node-8
    valuesUrl: http://${option.proxy.value}/devices
  - enforced: true
    hidden: true
    name: proxy
    required: true
    value: proxy:3001
    values:
    - proxy:3001
    valuesListDelimiter: ','
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: Dry run options
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: "if [ \"@option.dry-run-options@\" = \"commit\" ]\nthen\n    echo DRY_RUN_COMMAND=\"\
        ?async-commit-queue=@option.sync-option@\"\n    echo RUN_EXPORT=false    \n\
        else\n    echo DRY_RUN_COMMAND=\"@option.dry-run-options@\"\n    echo RUN_EXPORT=true\n\
        fi"
    - configuration:
        authentication: None
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-blob-class-map.json
        headers: |
          {"accept": "application/json","Authorization":"Bearer ${option.token}"}
        method: GET
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.class-map}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: get class map
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - configuration:
        authentication: None
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-blob-policy-map.json
        headers: |
          {"accept": "application/json","Authorization":"Bearer ${option.token}"}
        method: GET
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.policy-map}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: get policy map
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: get names
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |-
        classmap=/opt/cw/tmp/@job.execid@-blob-class-map.json
        policymap=/opt/cw/tmp/@job.execid@-blob-policy-map.json
        jq -r '"class-map-file="+(.name|tostring)' $classmap
        jq -r '"policy-map-file="+(.name|tostring)' $policymap
    - configuration:
        authentication: None
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-class-map.json
        headers: |
          {"accept": "application/json","Authorization":"Bearer ${option.token}"}
        method: GET
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.git}/api/v1/repos/${option.git-owners}/${option.git-repos}/raw/${option.git-dirs}/${data.class-map-file*}?ref=${option.git-branch}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: get class map as JSON
      nodeStep: false
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - configuration:
        authentication: None
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-policy-map.json
        headers: |
          {"accept": "application/json","Authorization":"Bearer ${option.token}"}
        method: GET
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.git}/api/v1/repos/${option.git-owners}/${option.git-repos}/raw/${option.git-dirs}/${data.policy-map-file*}?ref=${option.git-branch}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: get policy map as JSON
      nodeStep: false
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: update class map
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: class-map-payload
            regex: (.*)
            replaceFilteredResult: 'false'
          type: key-value-data
      script: |+
        file=/opt/cw/tmp/@job.execid@-class-map.json
        jq -c '(.. |select(type == "object" and .name==("Node-5")).name) |="@option.device-3@" | (.. |select(type == "object" and .name==("Node-4")).name) |="@option.device-4@" |(.. |select(type == "object" and .name==("Node-8")).name) |="@option.device-3@"' $file


    - description: update policy map
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: policy-map-payload
            regex: (.*)
            replaceFilteredResult: 'false'
          type: key-value-data
      script: |+
        file=/opt/cw/tmp/@job.execid@-policy-map.json
        jq -c '(.. |select(type == "object" and .name==("Node-5")).name) |="@option.device-3@" | (.. |select(type == "object" and .name==("Node-4")).name) |="@option.device-4@" |(.. |select(type == "object" and .name==("Node-3")).name) |="@option.device-1@" |(.. |select(type == "object" and .name==("Node-8")).name) |="@option.device-3@"' $file


    - jobref:
        group: CNC/Configuration
        importOptions: true
        name: get key vars
        project: CNC
        uuid: c3b0db66-3fdd-49b7-a5b5-4261a0ff3463
    - configuration:
        authentication: None
        body: ${data.class-map-payload*}
        checkResponseCode: 'false'
        headers: '{''Authorization'': ''Bearer ${export.cwtoken}'',''Content-Type'':
          ''application/yang-data+json''}'
        method: PATCH
        printResponse: 'true'
        printResponseToFile: 'false'
        proxySettings: 'false'
        remoteUrl: https://${export.cwvip}:30603/crosswork/proxy/nso/restconf/data${data.DRY_RUN_COMMAND*}
        sslVerify: 'false'
        timeout: '3000000'
      description: Create Service
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'true'
          type: render-datatype
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - configuration:
        authentication: None
        body: ${data.policy-map-payload*}
        checkResponseCode: 'false'
        headers: '{''Authorization'': ''Bearer ${export.cwtoken}'',''Content-Type'':
          ''application/yang-data+json''}'
        method: PATCH
        printResponse: 'true'
        printResponseToFile: 'false'
        proxySettings: 'false'
        remoteUrl: https://${export.cwvip}:30603/crosswork/proxy/nso/restconf/data${data.DRY_RUN_COMMAND*}
        sslVerify: 'false'
        timeout: '3000000'
      description: Create Service
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'true'
          type: render-datatype
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - configuration:
        fail: 'false'
        halt: 'true'
      description: success
      nodeStep: false
      type: flow-control
    keepgoing: false
    strategy: node-first
  uuid: efdd754c-613d-4251-b0a3-88d888fbdad8

