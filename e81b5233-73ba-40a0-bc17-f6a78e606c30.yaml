- defaultTab: nodes
  description: ''
  executionEnabled: true
  group: git
  id: e81b5233-73ba-40a0-bc17-f6a78e606c30
  loglevel: INFO
  name: git - replace wiki file v2
  nodeFilterEditable: false
  options:
  - enforced: true
    hidden: true
    name: proxy
    required: true
    value: proxy:3001
    values:
    - proxy:3001
    valuesListDelimiter: ','
  - enforced: true
    label: git owner
    name: git-owners
    required: true
    value: simon
    valuesUrl: http://${option.proxy.value}/git/owners
  - enforced: true
    label: git repository
    name: git-repos
    required: true
    value: demo
    valuesUrl: http://${option.proxy.value}/git/myrepos/${option.git-owners.value}
  - enforced: true
    label: GIT Branch
    name: git-branch
    required: true
    value: develop
    valuesUrl: http://${option.proxy.value}/git/branches/${option.git-owners.value}/${option.git-repos.value}
  - name: file-name
    required: true
  - name: file-path
    required: true
  - hidden: true
    name: token
    required: true
    secure: true
    storagePath: keys/gitea/token
    valueExposed: true
  - hidden: true
    name: git
    required: true
    secure: true
    storagePath: keys/git/repo
    valueExposed: true
  - name: message
    required: true
  - hidden: true
    name: template
    required: true
    value: '{"title":"Topy","content_base64":"string","message":"string"}'
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: generate base64 encoded
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: file-encoded
            regex: (.*)
          type: key-value-data
      script: |+
        echo @option.token@
        file=@option.file-path@
        encoded=$(base64 -w0 $file)
        echo $encoded


    - description: git path
      exec: echo '${option.git}/api/v1/repos/${option.git-owners}/${option.git-repos}/wiki/page/${option.file-name}'
    - configuration:
        authentication: None
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-servicedef.json
        headers: |+
          {"accept": "application/json","Content-Type" : "application/json","Authorization":"Bearer ${option.token}"}

        method: GET
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.git}/api/v1/repos/${option.git-owners}/${option.git-repos}/wiki/page/${option.file-name}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: get existing file properties
      nodeStep: false
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: get existing sha
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'false'
            name: file-sha
            regex: (.*)
          type: key-value-data
      script: |
        file=/opt/cw/tmp/@job.execid@-servicedef.json

        jq -r '.sha' $file
    - description: create payload
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: payload
            regex: (.*)
          type: key-value-data
      script: "#res=$(echo '@option.template@' | jq -c '.')\n#res=$(echo $res | jq\
        \ -c '.branch=\"@option.branch@\"')\n#res=$(echo $res | jq -c '.content=\"\
        @data.file-encoded*@\"')\n#res=$(echo $res | jq -c '. += {\"message\":\"@option.message@\"\
        }')\n#res=$(echo $res | jq -c '. += {\"sha\":\"@data.file-sha*@\"}')\n\n#echo\
        \ $res\n\nres=$(echo '@option.template@' | jq -c '.')\n\nres=$(echo $res |\
        \ jq -c '.title=\"@option.file-name@\"')\nres=$(echo $res | jq -c '. += {\"\
        message\":\"@option.message@\"}')\n#res=$(echo $res | jq -c '. += {\"content_base64\"\
        :\"@data.file-sha*@\"}')\nres=$(echo @data.file-encoded*@ | jq -R --argjson\
        \ res \"$res\" '$res+{\"content_base64\":.} ')\n\necho $res \n\n"
    - configuration:
        authentication: None
        body: ${data.payload*}
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-servicedesign.json
        headers: |+
          {"accept": "application/json","Content-Type" : "application/json","Authorization":"Bearer ${option.token}"}

        method: PATCH
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.git}/api/v1/repos/${option.git-owners}/${option.git-repos}/wiki/page/${option.file-name}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: replace file
      nodeStep: false
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    keepgoing: false
    strategy: node-first
  uuid: e81b5233-73ba-40a0-bc17-f6a78e606c30

