- defaultTab: nodes
  description: 'Attach the SR policies created in step 2 to the service, with optional
    `dry-run`'
  executionEnabled: false
  group: -DEMO
  id: 6595583d-a850-42bd-9d06-30e1003098e4
  loglevel: INFO
  name: CNC - L2 Service (step 3 - attach policy to service)
  nodeFilterEditable: false
  notification:
    onsuccess:
      email:
        recipients: device-details@necehealthpoc.local
        subject: ${notification.eventStatus} ${job.name}
  notifyAvgDurationThreshold: null
  options:
  - enforced: true
    label: CW POD
    name: cnc-pod
    required: true
    valuesUrl: file:/opt/cw/options/cw-environments.json
  - enforced: true
    label: Commit Options
    name: dry-run-options
    required: true
    valuesUrl: file:/opt/cw/options/nso-commit-options.json
  - description: default `l2vpn-tldp-1001`
    name: vpn-id
    required: true
    value: l2vpn-tldp-1001
  - hidden: true
    name: payload
    required: true
    value: '{"ietf-l2vpn-ntw:vpn-service":[{}]}'
  - enforced: true
    name: device-1
    required: true
    value: Node-4
    valuesUrl: http://${option.proxy.value}/devices
  - name: device-1-policy
    required: true
    value: srte_c_2003_ep_198.19.1.4
  - enforced: true
    name: device-2
    required: true
    value: Node-5
    valuesUrl: http://${option.proxy.value}/devices
  - name: device-2-policy
    required: true
    value: srte_c_2003_ep_198.19.1.5
  - enforced: true
    hidden: true
    name: proxy
    required: true
    value: proxy:3001
    values:
    - proxy:3001
    valuesListDelimiter: ','
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: Dry run options
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |-
        if [ "@option.dry-run-options@" = "commit" ]
        then
            echo DRY_RUN_COMMAND=
        else
            echo DRY_RUN_COMMAND="@option.dry-run-options@"
        fi
    - description: Update Payload with characteristics (policy name)
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: payload
            regex: (.*)
          type: key-value-data
      script: |+
        payload=/opt/cw/tmp/@job.execid@-payload-in.json
        payloadout=/opt/cw/tmp/@job.execid@-payload-out.json

        echo '@option.payload@' > $payload

        if [ true == true ]
        then
          res=$(jq '."ietf-l2vpn-ntw:vpn-service"[0]."vpn-nodes"[0]."vpn-node" += {"vpn-node-id":"@option.device-1@","ne-id":"@option.device-1@","te-service-mapping":{"te-mapping":{"sr-policy":{"policy":"@option.device-1-policy@"}}}}' $payload)
          res=$(echo $res | jq '."ietf-l2vpn-ntw:vpn-service"[0]."vpn-nodes"[1]."vpn-node" += {"vpn-node-id":"@option.device-2@","ne-id":"@option.device-2@","te-service-mapping":{"te-mapping":{"sr-policy":{"policy":"@option.device-2-policy@"}}}}')
        else
          res=$(jq -c '.' $payload)
        fi

        echo $res | jq -c





    - exec: echo ${data.payload*}
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'true'
          type: render-datatype
    - jobref:
        group: CNC/Configuration
        importOptions: true
        name: get key vars
        uuid: c3b0db66-3fdd-49b7-a5b5-4261a0ff3463
    - configuration:
        authentication: None
        body: ${data.payload*}
        checkResponseCode: 'false'
        headers: |
          {"Content-Type": "application/yang-data+json","Authorization": "Bearer ${export.cwtoken}"}
        method: PATCH
        printResponse: 'true'
        printResponseToFile: 'false'
        proxySettings: 'false'
        remoteUrl: https://${export.mgtvip}:30603/crosswork/proxy/nso/restconf/data/ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service=${option.vpn-id}${data.DRY_RUN_COMMAND*}
        sslVerify: 'false'
        timeout: '30000'
      description: Provision Service
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'false'
          type: render-datatype
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    keepgoing: false
    strategy: node-first
  uuid: 6595583d-a850-42bd-9d06-30e1003098e4

