- defaultTab: nodes
  description: |
    Locate and list ISO images within the vCenter environment
  executionEnabled: true
  group: CNC/Setup
  id: a24985c1-4a4a-4c77-8148-bfbc5576484f
  loglevel: INFO
  name: Discovery vCenter ISO Images
  nodeFilterEditable: false
  options:
  - enforced: true
    hidden: true
    name: path
    required: true
    value: /backup/keys/keys/vmware
    values:
    - /backup/keys/keys/vmware
    valuesListDelimiter: ','
  - enforced: true
    label: Environment
    name: scope
    required: true
    valuesUrl: file:/opt/cw/options/vmw-environments.json
  - delimiter: ','
    description: '> Simply displays the existing ISO files. Will be updated after
      each run.'
    enforced: true
    label: Name of ISO file
    multivalued: true
    name: ISO_File
    valuesUrl: file:/opt/cw/options/iso-files-${option.scope.value}.json
  plugins:
    ExecutionLifecycle: {}
  scheduleEnabled: true
  sequence:
    commands:
    - description: get vars
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: "filein=/opt/cw/options/vmw-environments.json\n#jq -r '.[] | select(.name==\"\
        @option.cnc-vip@\").\"mgt-vip\"' /opt/cw/options/cw-environments.json \njq\
        \ --raw-output '.[] | select(.value==\"@option.scope@\") | to_entries[] |\
        \  [.key,.value]|join(\"=\")' $filein"
    - description: GOVC variables
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |-
        echo GOVC_URL=$(cat @option.path@/@data.proxy*@-vc-address)
        echo GOVC_USERNAME=$(cat @option.path@/@data.proxy*@-vc-user)
        echo GOVC_PASSWORD=$(cat @option.path@/@data.proxy*@-vc-password)
        echo GOVC_INSECURE=1
    - description: write current DS
      exec: echo '[\"${option.ISO_Datastore}\"]' > /opt/cw/options/ds-selected.json
    - description: Find ISO files
      script: |+
        #echo [ > /opt/cw/options/iso-files.json
        #jq '[.[] | .["folder"] = .FolderPath | .folder + (.File[] | select (.Path|test(".iso")).Path ) | .]' /opt/cw/tmp/files-in-ds.json > /opt/cw/options/iso-files.json
        #sed -i 's/}/},/g' /opt/cw/options/iso-files.json
        #echo ] >> /opt/cw/options/iso-files.json

        export GOVC_URL=@data.GOVC_URL*@
        export GOVC_USERNAME=@data.GOVC_USERNAME*@
        export GOVC_PASSWORD=@data.GOVC_PASSWORD*@
        export GOVC_INSECURE=@data.GOVC_INSECURE*@
        env grep -i GOVC

        #govc find -type s | xargs -I %s govc datastore.ls -json=true -k -R=true -ds=%s | jq -s . | jq -r '[.[][]| .folderPath as $path | .file[] | select (.path|test(".iso")).path | [$path,.]|join("")]' > /opt/cw/options/iso-files-@option.scope@.json
        govc find -type s | xargs -I %s govc datastore.ls -json=true -k -R=true -ds=%s | jq -s . | jq -r '[..|objects|select(has("file")) | .folderPath as $path | .file[] | select (.path|test(".iso")).path | [$path,.]|join("/")]' > /opt/cw/options/iso-files-@option.scope@.json

    keepgoing: false
    strategy: sequential
  timeout: 4h
  uuid: a24985c1-4a4a-4c77-8148-bfbc5576484f

