- defaultTab: nodes
  description: |
    Deploys stored template services and policies from git. VPN services will be prefixed with the customer name
    ---
    [Start Consumer](526acfcf-fabb-4ca1-97da-145cd9d814b9)
  executionEnabled: true
  group: -DEMO
  id: c1b58f73-5f64-451c-a9d4-ce2d4ad3ce64
  loglevel: INFO
  maxMultipleExecutions: '5'
  multipleExecutions: true
  name: CNC - Add Services and Policies (Kafka Version)
  nodeFilterEditable: false
  notification:
    onsuccess:
      email:
        recipients: autoamtion@microlab.dcloud.cisco.com
        subject: '${notification.eventStatus} :[${job.name}]: New VPN Definition :
          ${option.customer}-${option.vpn-name}.json'
  notifyAvgDurationThreshold: null
  options:
  - enforced: true
    hidden: true
    name: proxy
    required: true
    value: proxy:3001
    values:
    - proxy:3001
    valuesListDelimiter: ','
  - description: '[kill](8254e6a0-a938-401c-aa0e-609de4e9af0d) | [start](526acfcf-fabb-4ca1-97da-145cd9d814b9)
      | [Kafka UI](http://172.16.42.131:8080/)'
    enforced: true
    label: Kafka Consumers
    name: '---'
    required: true
    value: '------------------------------------------------'
    values:
    - '------------------------------------------------'
    valuesListDelimiter: ','
  - hidden: true
    name: git
    required: true
    secure: true
    storagePath: keys/git/repo
    valueExposed: true
  - hidden: true
    name: token
    required: true
    secure: true
    storagePath: keys/gitea/token
    valueExposed: true
  - description: '> [Authenticate](96e872a2-5704-4af6-96dc-47758e6049d9)'
    enforced: true
    label: CNC POD
    name: cnc-pod
    required: true
    valuesUrl: file:/opt/cw/options/cw-environments.json
  - description: '## git options'
    enforced: true
    label: Commit Options
    name: dry-run-options
    required: true
    valuesUrl: file:/opt/cw/options/nso-commit-options.json
  - enforced: true
    label: Sync
    name: sync-option
    required: true
    value: 'true'
    values:
    - 'true'
    - 'false'
    valuesListDelimiter: ','
  - enforced: true
    label: git owner
    name: git-owners
    required: true
    value: simon
    valuesUrl: http://${option.proxy.value}/git/owners
  - enforced: true
    label: git repository
    name: git-repos
    required: true
    value: cnc5
    valuesUrl: http://${option.proxy.value}/git/myrepos/${option.git-owners.value}
  - enforced: true
    label: GIT Branch
    name: git-branch
    required: true
    valuesUrl: http://${option.proxy.value}/git/branches/${option.git-owners.value}/${option.git-repos.value}
  - enforced: true
    label: Repo directories
    name: git-dirs
    required: true
    value: README.md
    valuesUrl: http://${option.proxy.value}/git/content/dir/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}
  - delimiter: '|'
    enforced: true
    label: File / Template
    multivalueAllSelected: true
    multivalued: true
    name: file
    required: true
    sortValues: true
    valuesUrl: http://${option.proxy.value}/git/files/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}/${option.git-dirs.value}
  - hidden: true
    name: now
    required: true
    value: ${DATE:yyyy-MM-dd-HH-mm-ss}
  - dateFormat: YYYY-MM-DDThh:mm:ss|a|Z
    isDate: true
    name: not-before
    required: true
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: Dry run options
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |-
        if [ "@option.dry-run-options@" = "commit" ]
        then
            echo DRY_RUN_COMMAND="?async-commit-queue=@option.sync-option@"
        else
            echo DRY_RUN_COMMAND="@option.dry-run-options@"
        fi
    - plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |-
        file=/opt/cw/tmp/nso-job-master.json
        echo '@option.file@' | jq --raw-input '.|split("|") ' > $file
        echo file=$file
    - jobref:
        args: -raw ${data.file*}
        group: ''
        importOptions: true
        name: NSO Kafka Job
        uuid: 3c85fc18-a3b0-4998-80b3-089e2ed6ad99
    - configuration:
        fail: 'false'
        halt: 'true'
      description: success
      nodeStep: false
      type: flow-control
    keepgoing: true
    strategy: node-first
  uuid: c1b58f73-5f64-451c-a9d4-ce2d4ad3ce64

