- defaultTab: nodes
  description: |-
    modify the latency on a specific interface and device
    ---
    ## Demo Setup
    For L2VPN, routing should look like `Node-4` -> `Node-3` -> `Node-1` -> `Node-5`

    We will inject latency between `Node-3` interface `GigabitEthernet0/0/0/3` and `Node-4` interface `GigabitEthernet0/0/0/2` of 30ms

    We expect to see path transition in about 30 seconds
  executionEnabled: true
  group: -DEMO/3-CNC Alerts
  id: dd45c16b-e258-494c-a320-e035d959b311
  loglevel: INFO
  name: CNC - Get Alerts
  nodeFilterEditable: false
  options:
  - enforced: true
    label: CW POD
    name: cnc-pod
    required: true
    value: R1R2
    valuesUrl: file:/opt/cw/options/cw-environments.json
  - delimiter: ','
    enforced: true
    multivalued: true
    name: device
    required: true
    valuesUrl: file:/opt/cw/options/${option.cnc-pod.value}-devices.json
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: get cnc token
      jobref:
        group: CNC/Configuration
        importOptions: true
        name: get key vars
        uuid: c3b0db66-3fdd-49b7-a5b5-4261a0ff3463
    - configuration:
        authentication: None
        body: '{"offset":"0","limit":"20","time_interval":"1h","time_ago":"0h","devices":["${option.device}"],"kpis":["pulse_cpu_utilization"],"levels":[]}'
        checkResponseCode: 'false'
        file: /opt/cw/tmp/${job.execid}-alerts.json
        headers: |+
          {"Content-Type": "application/yang-data+json","Authorization": "Bearer ${export.cwtoken}"}

        method: POST
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: https://${export.mgtvip}:30603/crosswork/hi/v1/alerts/series/alerts/devices
        sslVerify: 'false'
        timeout: '30000'
      description: Get Stats
      nodeStep: false
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: Extract properties
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'true'
          type: render-datatype
      script: |-
        file=/opt/cw/tmp/@job.execid@-alerts.json
        jq '[.[][][] | {"device-name":.producer,"device-component":.context_json."node-name","alert-severity":.level,"alert-state":.state,"alert-message":.msg}]' $file
    keepgoing: false
    strategy: node-first
  uuid: dd45c16b-e258-494c-a320-e035d959b311

