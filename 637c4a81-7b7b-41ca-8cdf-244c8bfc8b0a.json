[ {
  "defaultTab" : "nodes",
  "description" : "",
  "executionEnabled" : true,
  "group" : "CWC",
  "id" : "637c4a81-7b7b-41ca-8cdf-244c8bfc8b0a",
  "loglevel" : "INFO",
  "name" : "Get Alarms",
  "nodeFilterEditable" : false,
  "options" : [ {
    "enforced" : true,
    "name" : "ASN",
    "valuesUrl" : "file:/opt/cw/options/cwc-asn.json"
  }, {
    "enforced" : true,
    "name" : "request-type",
    "required" : true,
    "value" : "alarms",
    "values" : [ "alarms", "policies" ],
    "valuesListDelimiter" : ","
  }, {
    "enforced" : true,
    "label" : "Alarm state filter",
    "name" : "state",
    "required" : true,
    "value" : "ACTIVE",
    "values" : [ "ACTIVE", "INACTIVE", "NONE" ],
    "valuesListDelimiter" : ","
  }, {
    "hidden" : true,
    "name" : "token",
    "required" : true,
    "secure" : true,
    "storagePath" : "keys/CWC/token",
    "valueExposed" : true
  } ],
  "plugins" : {
    "ExecutionLifecycle" : null
  },
  "scheduleEnabled" : true,
  "sequence" : {
    "commands" : [ {
      "description" : "determine filter",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "captureMultipleKeysValues" : "true",
            "hideOutput" : "false",
            "logData" : "true",
            "regex" : "^(.+?)\\s*=\\s*(.+)"
          },
          "type" : "key-value-data-multilines"
        } ]
      },
      "script" : "if [ \"@option.state@\" == \"ACTIVE\" ]\nthen \n    echo filter=ALARM_STATE_ACTIVE\n    echo dofilter=yes\nelif [ \"@option.state@\" == \"INACTIVE\" ]\nthen \n    echo filter=ALARM_STATE_INACTIVE\n    echo dofilter=yes\nelif [ \"@option.state@\" == \"NONE\" ]\nthen \n    echo dofilter=no\nfi"
    }, {
      "configuration" : {
        "authentication" : "None",
        "checkResponseCode" : "false",
        "file" : "/opt/cw/tmp/${job.execid}-cwc-asn.json",
        "headers" : " {\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer ${option.token}\"}",
        "method" : "GET",
        "printResponse" : "true",
        "printResponseToFile" : "true",
        "proxySettings" : "false",
        "remoteUrl" : "https://crosswork.cisco.com/api/v1/asns",
        "sslVerify" : "true",
        "timeout" : "30000"
      },
      "description" : "Get ASNs",
      "nodeStep" : false,
      "type" : "edu.ohio.ais.rundeck.HttpWorkflowStepPlugin"
    }, {
      "description" : "create ASN",
      "script" : "filein=/opt/cw/tmp/@job.execid@-cwc-asn.json\nfileout=/opt/cw/options/cwc-asn.json\njq '[..|objects|select(has(\"asn\")).asn|tostring]' $filein > $fileout\n\n"
    }, {
      "configuration" : {
        "authentication" : "None",
        "checkResponseCode" : "false",
        "file" : "/opt/cw/tmp/${job.execid}-cwc-alarms.json",
        "headers" : " {\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer ${option.token}\"}",
        "method" : "GET",
        "printResponse" : "false",
        "printResponseToFile" : "true",
        "proxySettings" : "false",
        "remoteUrl" : "https://crosswork.cisco.com/api/v1/${option.request-type}",
        "sslVerify" : "true",
        "timeout" : "30000"
      },
      "description" : "Get",
      "nodeStep" : false,
      "type" : "edu.ohio.ais.rundeck.HttpWorkflowStepPlugin"
    }, {
      "description" : "parse response",
      "script" : "filein=/opt/cw/tmp/@job.execid@-cwc-alarms.json\nTZ=Australia/Sydney\nif [ \"@data.dofilter*@\" == \"yes\" ]\nthen \n    # use the filter\n    jq -r '[.alarms[] | select(.state == \"@data.filter*@\") |del(..|objects|select(has(\"allViolationPeers\")))|(..|select(has(\"activatedAt\"))?).activatedAt|=(fromdateiso8601| gmtime| strflocaltime (\"%Y-%m-%dT%H:%M:%SZ\"))|[ [leaf_paths as $path | {\"key\": $path | join(\"_\"), \"value\": getpath($path)}] | from_entries ] []] |  (.[0] | keys_unsorted) as $keys |   ([$keys] + map([.[ $keys[] ]])) [] | @csv' $filein\nelse \n    # return all (no filter)\n    jq -r '[.alarms[] |del(..|objects|select(has(\"allViolationPeers\")))|(..|select(has(\"activatedAt\"))?).activatedAt|=(fromdateiso8601| gmtime| strflocaltime (\"%Y-%m-%dT%H:%M:%SZ\"))|[ [leaf_paths as $path | {\"key\": $path | join(\"_\"), \"value\": getpath($path)}] | from_entries ] []] |  (.[0] | keys_unsorted) as $keys |   ([$keys] + map([.[ $keys[] ]])) [] | @csv' $filein\nfi "
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "uuid" : "637c4a81-7b7b-41ca-8cdf-244c8bfc8b0a"
} ]
