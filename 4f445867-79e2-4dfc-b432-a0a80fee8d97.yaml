- defaultTab: nodes
  description: |+
    Deploys stored template services and policies from git. VPN services will be prefixed with the customer name

  executionEnabled: true
  group: -DEMO
  id: 4f445867-79e2-4dfc-b432-a0a80fee8d97
  loglevel: INFO
  name: CNC - Add Services and Policies
  nodeFilterEditable: false
  notification:
    onsuccess:
      email:
        recipients: autoamtion@microlab.dcloud.cisco.com
        subject: '${notification.eventStatus} :[${job.name}]: New VPN Definition :
          ${option.customer}-${option.vpn-name}.json'
  notifyAvgDurationThreshold: null
  options:
  - enforced: true
    hidden: true
    name: proxy
    required: true
    value: proxy:3001
    values:
    - proxy:3001
    valuesListDelimiter: ','
  - hidden: true
    name: git
    required: true
    secure: true
    storagePath: keys/git/repo
    valueExposed: true
  - hidden: true
    name: token
    required: true
    secure: true
    storagePath: keys/gitea/token
    valueExposed: true
  - description: '> [Authenticate](96e872a2-5704-4af6-96dc-47758e6049d9)'
    enforced: true
    label: CNC POD
    name: cnc-pod
    required: true
    valuesUrl: file:/opt/cw/options/cw-environments.json
  - description: |-
      > [Add](8e3b0a1a-421c-4d0d-bb2c-c7d0af07116c)|[Remove](eec83222-22a5-46b9-9712-0b869442c27d)
      ## CW/NSO Commit Options
    enforced: true
    label: Customer
    name: customer
    required: true
    valuesUrl: file:/opt/cw/options/customers.json
  - description: '## git options'
    enforced: true
    label: Commit Options
    name: dry-run-options
    required: true
    valuesUrl: file:/opt/cw/options/nso-commit-options.json
  - enforced: true
    label: Sync
    name: sync-option
    required: true
    value: 'true'
    values:
    - 'true'
    - 'false'
    valuesListDelimiter: ','
  - enforced: true
    label: git owner
    name: git-owners
    required: true
    value: simon
    valuesUrl: http://${option.proxy.value}/git/owners
  - enforced: true
    label: git repository
    name: git-repos
    required: true
    value: cnc5
    valuesUrl: http://${option.proxy.value}/git/myrepos/${option.git-owners.value}
  - enforced: true
    label: GIT Branch
    name: git-branch
    required: true
    valuesUrl: http://${option.proxy.value}/git/branches/${option.git-owners.value}/${option.git-repos.value}
  - enforced: true
    label: Repo directories
    name: git-dirs
    required: true
    value: README.md
    valuesUrl: http://${option.proxy.value}/git/content/dir/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}
  - enforced: true
    label: 'File '
    name: file
    required: true
    sortValues: true
    valuesUrl: http://${option.proxy.value}/git/files/${option.git-owners.value}/${option.git-repos.value}/${option.git-branch.value}/${option.git-dirs.value}
  - hidden: true
    name: now
    required: true
    value: ${DATE:yyyy-MM-dd-HH-mm-ss}
  plugins:
    ExecutionLifecycle: null
  scheduleEnabled: true
  sequence:
    commands:
    - description: Dry run options
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: "if [ \"@option.dry-run-options@\" = \"commit\" ]\nthen\n    echo DRY_RUN_COMMAND=\"\
        ?async-commit-queue=@option.sync-option@\"\n    echo RUN_EXPORT=false    \n\
        else\n    echo DRY_RUN_COMMAND=\"@option.dry-run-options@\"\n    echo RUN_EXPORT=true\n\
        fi"
    - configuration:
        authentication: None
        checkResponseCode: 'true'
        file: /opt/cw/tmp/${job.execid}-git-blob.json
        headers: |
          {"accept": "application/json","Authorization":"Bearer ${option.token}"}
        method: GET
        printResponse: 'true'
        printResponseToFile: 'true'
        proxySettings: 'false'
        remoteUrl: ${option.file}
        responseCode: '200'
        sslVerify: 'false'
        timeout: '30000'
      description: get file from git
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: determine file name from git
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |+
        file=/opt/cw/tmp/@job.execid@-git-blob.json
        outfile=/opt/cw/tmp/@job.execid@-git-file.json
        jq -r '.content' $file | base64 -d | jq -cr . > $outfile
        jq -r '"git-file="+(.name|tostring)' $file


    - description: get internal name
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: "file=/opt/cw/tmp/@job.execid@-git-file.json \njq -r '(.. |select(type\
        \ == \"object\" and (has(\"vpn-id\") or has(\"service-id\"))) ) | .\"service-id\"\
        ,.\"vpn-id\" | select(.)' $file\n"
    - description: get policy as payload
      plugins:
        LogFilter:
        - config:
            invalidKeyPattern: \s|\$|\{|\}|\\
            logData: 'true'
            name: cnc-payload
            regex: (.*)
            replaceFilteredResult: 'false'
          type: key-value-data
      script: |
        file=/opt/cw/tmp/@job.execid@-git-file.json
        jq -c '(..|objects|select(."vpn-id")."vpn-id") |=("@option.customer@-"+.)' $file
    - description: get NSO service type
      plugins:
        LogFilter:
        - config:
            captureMultipleKeysValues: 'true'
            hideOutput: 'false'
            logData: 'true'
            regex: ^(.+?)\s*=\s*(.+)
          type: key-value-data-multilines
      script: |
        #file=/opt/cw/options/nso-service-types.json
        file=/opt/cw/tmp/@job.execid@-git-file.json
        #jq -r '.[] | select(.folder=="@option.git-dirs@") | "service-model="+.value' $file
        #jq -r '(if .[]|type=="object" then "yes" else "no" end) as $x | if $x=="yes" then ("service-model="+(.|keys[0]|tostring)) else "service-model=ietf-te:te/tunnels" end' $file
        #jq -r '(if .[]|type=="object" then "yes" else "no" end) as $x | if $x=="yes" then ([.[]| leaf_paths as $path | {"key":$path|join("|"),"value":getpath($path)}] | from_entries) else ([.| leaf_paths as $path | {"key":$path|join("|"),"value":getpath($path)}] | from_entries) end #|to_entries[0].value' $file
        jq -r '(if .[]|type=="object" then "yes" else "no" end) as $x | if $x=="yes" then (.[]| leaf_paths as $path | ($path|join("|")|tostring)+"="+(getpath($path)|tostring) ) else (.| leaf_paths as $path | ($path|join("|")|tostring)+"="+(getpath($path)|tostring) ) end' $file
        #jq -r '(if .[]|type=="object" then "yes" else "no" end) as $x | if $x=="yes" then ([.[]| leaf_paths as $path | {"key":$path|join("|"),"value":getpath($path)}] | from_entries) else ([.| leaf_paths as $path | {"key":$path|join("|"),"value":getpath($path)}] | from_entries) end | "service-name="+(to_entries[0].value|tostring)' $file
        #jq -r '.|keys[0] | "service-type="+.|tostring' $file
    - jobref:
        group: CNC/Configuration
        importOptions: true
        name: get key vars
        project: CNC
        uuid: c3b0db66-3fdd-49b7-a5b5-4261a0ff3463
    - exec: echo '${data.service-model*}
    - description: run exports true or false
      errorhandler:
        jobref:
          args: -name "Crosswork" -friendly-name "${data.service-name*}" -service-type
            "${data.service-type*}" -payload ${data.cnc-payload*}
          group: -DEMO
          importOptions: true
          name: Create dry run exports
          nodeStep: 'true'
          uuid: f3176d98-5e8b-4c7b-bc55-e918addca4ee
        keepgoingOnSuccess: true
      script: |-
        if [ "@data.RUN_EXPORT@" = "true" ]
        then
            false
        fi
    - configuration:
        authentication: None
        body: ${data.cnc-payload*}
        checkResponseCode: 'false'
        headers: '{''Authorization'': ''Bearer ${export.cwtoken}'',''Content-Type'':
          ''application/yang-data+json''}'
        method: PATCH
        printResponse: 'true'
        printResponseToFile: 'false'
        proxySettings: 'false'
        remoteUrl: https://${export.cwvip}:30603/crosswork/proxy/nso/restconf/data/${data.service-model*}${data.DRY_RUN_COMMAND*}
        sslVerify: 'false'
        timeout: '3000000'
      description: Create Service
      nodeStep: false
      plugins:
        LogFilter:
        - config:
            datatype: application/json
            sanitizeHtml: 'true'
            striped: 'true'
          type: render-datatype
      type: edu.ohio.ais.rundeck.HttpWorkflowStepPlugin
    - description: Update service list
      jobref:
        group: -DEMO
        importOptions: true
        name: CNC - Get CNC Services
        uuid: 9417edf1-10dc-4df8-87d9-04cbeba35b3b
    - configuration:
        fail: 'false'
        halt: 'true'
      description: success
      nodeStep: false
      type: flow-control
    keepgoing: false
    strategy: node-first
  uuid: 4f445867-79e2-4dfc-b432-a0a80fee8d97

